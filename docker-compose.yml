version: '3.8'
services:
  # Node.js Application Container
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodejs-app
    restart: always
    ports:
      - ${PORT}:${PORT} # Map host port {PORT} to container port {PORT} for the Node.js server
    env_file: .env
    volumes:
      - .:/app # Mount current directory to /app in the container
    depends_on:
      db:
        condition: service_healthy # Wait for the db to be healthy

  # MySQL Database Container
  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    command: [ "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password" ]
    ports:
      - '3306:3306' # Map host port 3306 to container port 3306 for MySQL
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      # Add a healthcheck to ensure MySQL is ready
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s # Check every 10 seconds
      timeout: 5s # Timeout for each check
      retries: 5 # Retry 5 times before considering it unhealthy

  # Adminer Container
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - '5001:8080' # Map host port 5001 to Adminerâ€™s internal port 8080
    depends_on:
      db:
        condition: service_healthy # Wait for the db to be healthy

# Docker volumes to persist database data
volumes:
  db_data:
